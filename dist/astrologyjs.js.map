{"version":3,"file":null,"sources":["../src/js/planet.js","../src/js/rp.js","../src/js/person.js","../src/js/aspect.js","../src/js/chart-factory.js","../src/js/chart.js","../src/js/main.js"],"sourcesContent":["\"use strict\";\n/**\n * One of the planets, asteroids, the sun or moon\n */\nclass Planet {\n    /**\n     * Instantiate a new planet object.\n     * @param {string} name The planet's name\n     * @param {number} lon  The planet's longitude\n     * @param {number} lat  The planet's latitude\n     * @param {number} spd  The planet's speed relative to earth\n     */\n    constructor(name, lon, lat, spd) {\n        /**\n         * Dictionary of symbols for the planets for\n         * use with the Kairon Semiserif font\n         * @type {Object}\n         */\n        this.symbols = {\n            \"sun\": \"a\",\n            \"moon\": \"s\",\n            \"mercury\": \"d\",\n            \"venus\": \"f\",\n            \"earth\": \"g\",\n            \"mars\": \"h\",\n            \"jupiter\": \"j\",\n            \"saturn\": \"k\",\n            \"uranus\": \"ö\",\n            \"neptune\": \"ä\",\n            \"pluto\": \"#\",\n            \"south node\": \"?\",\n            \"north node\": \"ß\",\n            \"ceres\": \"A\",\n            \"pallas\": \"S\",\n            \"juno\": \"D\",\n            \"vesta\": \"F\",\n            \"lilith\": \"ç\",\n            \"cupido\": \"L\",\n            \"chiron\": \"l\",\n            \"nessus\": \"ò\",\n            \"pholus\": \"ñ\",\n            \"chariklo\": \"î\",\n            \"eris\": \"È\",\n            \"chaos\": \"Ê\",\n            \"fortuna\": \"%\"\n        };\n        this.name = name;\n        this.longitude = lon;\n        this.latitude = lat;\n        this.speed = spd;\n        this.symbol = this.symbols[name.toLowerCase()];\n    }\n    /**\n     * A planet is retrograde when it's speed relative\n     * to earth is less than zero\n     * @return {boolean} Whether or not the planet is retrograde\n     */\n    isRetrograde() {\n        return this.speed < 0;\n    }\n    /**\n     * Is this one of the major planets typically included in a chart?\n     * @return {boolean} Returns true if it is a major planet\n     */\n    isMajor() {\n        return [\"sun\", \"moon\", \"mercury\", \"venus\", \"mars\", \"jupiter\", \"saturn\",\n            \"uranus\", \"neptune\", \"pluto\", \"north node\", \"south node\"]\n            .indexOf(this.name.toLowerCase()) > -1;\n    }\n}\nexports.Planet = Planet;\n","\"use strict\";\nconst https = require(\"https\");\nconst uri = (options) => {\n    let url = options.uri, qs = Object.keys(options.qs).map(key => {\n        return `${encodeURIComponent(key)}=${encodeURIComponent(options.qs[key].toString())}`;\n    }).join(\"&\");\n    return `${url}?${qs}`;\n};\nconst rp = (options) => {\n    return new Promise((resolve, reject) => {\n        const http = require(\"http\");\n        const lib = options.uri.startsWith(\"https\") ? https : http;\n        const url = uri(options);\n        const req = lib.get(url, (response) => {\n            if (response.statusCode < 200 || response.statusCode > 299) {\n                reject(new Error(\"HTTP Error: \" + response.statusCode));\n            }\n            const body = [];\n            response.on(\"data\", (chunk) => body.push(chunk));\n            response.on(\"end\", () => resolve(JSON.parse(body.join(\"\"))));\n        });\n        req.on(\"error\", (err) => reject(err));\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = rp;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst rp_1 = require(\"./rp\");\n/**\n * Represents a person or event for whom a chart will be created\n */\nclass Person {\n    /**\n     * Creates a Person object\n     * @param {string} public name Name of the person or event\n     * @param {string} public date UTC date in ISO 8601 format, i.e. YYYY-MM-DDTHH:mmZ (caller must convert to UTC)\n     * @param {Point} location The [lat: number, lon: number] of the event or person's birthplace\n     */\n    constructor(name, date, location) {\n        this.name = name;\n        this.date = date;\n        this.location = location;\n    }\n    /**\n     * Asynchronous factory function for creating people or events\n     * @param  {string}          name     Name of the person or event\n     * @param  {Date | string}   date     Exact datetime for the chart, preferably UTC date in ISO 8601 format, i.e. YYYY-MM-DDTHH:mmZ (caller must convert to UTC)\n     * @param  {Point | string}  location Either an address or a lat/lng combination\n     * @return {Promise<Person>}          The Person object that was created\n     */\n    static create(name, date, location) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let dt, loc;\n            // make sure a name was submitted\n            if (!name) {\n                throw new Error(\"No name was submitted for the person\");\n            }\n            // deal with the type of date submitted\n            if (typeof date === \"string\") {\n                if (!/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}(?::\\d{2}\\.\\d{3})?Z/.test(date)) {\n                    throw new TypeError(\"Date not formatted according to ISO 8601 (YYYY-MM-DDTHH:mmZ)\");\n                }\n                dt = date;\n            }\n            else if (date instanceof Date) {\n                dt = date.toISOString();\n            }\n            else {\n                // defaults to \"now\"\n                dt = new Date().toISOString();\n            }\n            // deal with the type of location submitted\n            if (typeof location === \"string\") {\n                loc = yield this.getLatLon(location);\n            }\n            else {\n                // make sure latitude was valid\n                if (location.lat < -90 || location.lat > 90) {\n                    throw new RangeError(\"Latitude must be between -90 and 90\");\n                }\n                // make sure longitude was valid\n                if (location.lng < -180 || location.lng > 180) {\n                    throw new RangeError(\"Longitude must be between -180 and 180\");\n                }\n                loc = location;\n            }\n            return new Person(name, dt, loc);\n        });\n    }\n    /**\n     * Gets a timezone given a latitude and longitude\n     * @param {Point} p  Contains the latitude and longitude in decimal format\n     */\n    static getTimezone(p) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield rp_1.default({\n                uri: \"https://maps.googleapis.com/maps/api/timezone/json\",\n                qs: {\n                    key: this._key,\n                    location: `${p.lat},${p.lng}`,\n                    timestamp: Math.floor(Date.now() / 1000)\n                }\n            }).then((tzinfo) => tzinfo.timeZoneId, (error) => { throw Error(error.errorMessage); });\n        });\n    }\n    /**\n     * Get a latitude and longitude given an address\n     * @param {string} address The address of the desired lat/lon\n     */\n    static getLatLon(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield rp_1.default({\n                uri: \"https://maps.googleapis.com/maps/api/geocode/json\",\n                qs: {\n                    key: this._key,\n                    address: address\n                }\n            }).then((latlng) => latlng.results[0].geometry.location, (error) => { throw Error(error.error_message); });\n        });\n    }\n}\n/**\n * Google API key\n * @type {string}\n */\nPerson._key = \"AIzaSyAXnIdQxap1WQuzG0XxHfYlCA5O9GQyvuY\";\nexports.Person = Person;\n","\"use strict\";\n/**\n * Represents an aspect between two planets\n */\nclass Aspect {\n    /**\n     * Creates a new Aspect or throws an error if no aspect exists\n     * between the planets\n     * @param {Planet} public p1 First planet in the relationship\n     * @param {Planet} public p2 Second planet in the relationship\n     */\n    constructor(p1, p2) {\n        this.p1 = p1;\n        this.p2 = p2;\n        /**\n         * Catalog of all of the aspect types available in our system\n         * @type {AspectTypeArray}\n         */\n        this._types = {\n            \"conjunct\": { major: true, angle: 0, orb: 6, symbol: \"<\" },\n            \"semisextile\": { major: false, angle: 30, orb: 3, symbol: \"y\" },\n            \"decile\": { major: false, angle: 36, orb: 1.5, symbol: \">\" },\n            \"novile\": { major: false, angle: 40, orb: 1.9, symbol: \"M\" },\n            \"semisquare\": { major: false, angle: 45, orb: 3, symbol: \"=\" },\n            \"septile\": { major: false, angle: 51.417, orb: 2, symbol: \"V\" },\n            \"sextile\": { major: true, angle: 60, orb: 6, symbol: \"x\" },\n            \"quintile\": { major: false, angle: 72, orb: 2, symbol: \"Y\" },\n            \"bilin\": { major: false, angle: 75, orb: 0.9, symbol: \"-\" },\n            \"binovile\": { major: false, angle: 80, orb: 2, symbol: \";\" },\n            \"square\": { major: true, angle: 90, orb: 6, symbol: \"c\" },\n            \"biseptile\": { major: false, angle: 102.851, orb: 2, symbol: \"N\" },\n            \"tredecile\": { major: false, angle: 108, orb: 2, symbol: \"X\" },\n            \"trine\": { major: true, angle: 120, orb: 6, symbol: \"Q\" },\n            \"sesquiquadrate\": { major: false, angle: 135, orb: 3, symbol: \"b\" },\n            \"biquintile\": { major: false, angle: 144, orb: 2, symbol: \"C\" },\n            \"inconjunct\": { major: false, angle: 150, orb: 3, symbol: \"n\" },\n            \"treseptile\": { major: false, angle: 154.284, orb: 1.1, symbol: \"B\" },\n            \"tetranovile\": { major: false, angle: 160, orb: 3, symbol: \":\" },\n            \"tao\": { major: false, angle: 165, orb: 1.5, symbol: \"—\" },\n            \"opposition\": { major: true, angle: 180, orb: 6, symbol: \"m\" }\n        };\n        // get key properties of the planets\n        let l1 = p1.longitude, l2 = p2.longitude, ng = Math.abs(l1 - l2), r1 = p1.isRetrograde(), r2 = p2.isRetrograde(), s1 = Math.abs(p1.speed), s2 = Math.abs(p2.speed), ct = false; // corrected?\n        // correct for cases where the angle > 180 + the orb of opposition\n        if (ng > 180 + this._types[\"opposition\"].orb) {\n            ng = l1 > l2 ? 360 - l1 + l2 : 360 - l2 + l1;\n            ct = true;\n        }\n        // determine the aspect type\n        for (let type in this._types) {\n            let t = this._types[type];\n            if (ng >= t.angle - t.orb && ng <= t.angle + t.orb) {\n                this._type = type;\n            }\n        }\n        // bail out if there is no in-orb aspect between these two planets\n        if (typeof this._type === \"undefined\") {\n            throw new Error(\"There is no aspect between these two planets.\");\n        }\n        // determine the orb\n        this._orb = Number((ng % 1).toFixed(6));\n        // determine if it is applying or not; use speed magnitude (i.e. absolute value)\n        let orb = ng - this._types[this._type].angle;\n        // planets are in aspect across 0° Aries\n        if ((((orb < 0 && !ct && l2 > l1) || (orb > 0 && !ct && l1 > l2) ||\n            (orb < 0 && ct && l1 > l2) || (orb > 0 && ct && l2 > l1)) &&\n            ((!r1 && !r2 && s2 > s1) || (r1 && r2 && s1 > s2) || (r1 && !r2)) ||\n            (((orb > 0 && !ct && l2 > l1) || (orb < 0 && !ct && l1 > l2) ||\n                (orb > 0 && ct && l1 > l2) || (orb < 0 && ct && l2 > l1)) &&\n                ((!r1 && !r2 && s1 > s2) || (r1 && r2 && s2 > s1) || (!r1 && r2))))) {\n            this._applying = true;\n        }\n        else {\n            this._applying = false;\n        }\n    }\n    /**\n     * Get the type assigned to this aspect\n     * @return {string} One of the aspect type names\n     */\n    get type() { return this._type; }\n    /**\n     * Get the number of degrees away from being in perfect aspect\n     * @return {number} The number of degrees (absolute value)\n     */\n    get orb() { return this._orb; }\n    /**\n     * Get the character that will produce the correct symbol for\n     * this aspect in the Kairon Semiserif font\n     * @return {string} A character representing a symbol\n     */\n    get symbol() { return this._types[this._type].symbol; }\n    /**\n     * Is the aspect applying or separating?\n     * @return {boolean} True if the aspect is applying\n     */\n    isApplying() { return this._applying; }\n    /**\n     * Is this a \"major\" aspect? i.e. one of those you usually\n     * hear about in astrological forecasts\n     * @return {boolean} True if this is a \"major\" aspect\n     */\n    isMajor() { return this._types[this._type].major; }\n}\nexports.Aspect = Aspect;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst chart_1 = require(\"./chart\");\nconst rp_1 = require(\"./rp\");\n/**\n * Usage: let chart: Chart = ChartFactory.create(\"my cart\", person);\n */\nclass ChartFactory {\n    static create(name, p1, p2 = null, type = chart_1.ChartType.Basic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure a name was passed in\n            if (null === name || \"undefined\" === typeof name || 0 === name.length) {\n                throw Error(\"Chart must have a name (ChartFactory)\");\n            }\n            // check for undefined people\n            if (null === p1 || typeof p1 === \"undefined\") {\n                throw Error(\"Person cannot be null or undefined (ChartFactory)\");\n            }\n            switch (type) {\n                case chart_1.ChartType.Synastry:\n                case chart_1.ChartType.Combined:\n                case chart_1.ChartType.CombinedTransits:\n                case chart_1.ChartType.Davison:\n                    if (null === p2) {\n                        throw Error(\"2nd Person cannot be null for this chart type (ChartFactory)\");\n                    }\n            }\n            let cdata = [], date, p;\n            switch (type) {\n                case chart_1.ChartType.Transits:\n                    cdata = yield Promise.all([\n                        ChartFactory.getChartData(p1.date, p1.location),\n                        ChartFactory.getChartData(new Date().toISOString(), p1.location)\n                    ]);\n                    return new chart_1.Chart(name, p1, cdata, null, type);\n                case chart_1.ChartType.Synastry:\n                case chart_1.ChartType.Combined:\n                    cdata = yield Promise.all([\n                        ChartFactory.getChartData(p1.date, p1.location),\n                        ChartFactory.getChartData(p2.date, p2.location)\n                    ]);\n                    return new chart_1.Chart(name, p1, cdata, null, type);\n                case chart_1.ChartType.CombinedTransits:\n                    cdata = yield Promise.all([\n                        ChartFactory.getChartData(p1.date, p1.location),\n                        ChartFactory.getChartData(p2.date, p2.location),\n                        ChartFactory.getChartData(new Date().toISOString(), p1.location)\n                    ]);\n                    return new chart_1.Chart(name, p1, cdata, null, type);\n                case chart_1.ChartType.Davison:\n                    date = ChartFactory.getDatetimeMidpoint(p1.date, p2.date);\n                    p = ChartFactory.getGeoMidpoint(p1.location, p2.location);\n                    cdata.push(yield ChartFactory.getChartData(date, p));\n                    return new chart_1.Chart(name, p1, cdata);\n                case chart_1.ChartType.DavisonTransits:\n                    date = ChartFactory.getDatetimeMidpoint(p1.date, p2.date);\n                    p = ChartFactory.getGeoMidpoint(p1.location, p2.location);\n                    cdata = yield Promise.all([\n                        ChartFactory.getChartData(date, p),\n                        ChartFactory.getChartData(new Date().toISOString(), p)\n                    ]);\n                    return new chart_1.Chart(name, p1, cdata, null, type);\n                default:\n                    cdata.push(yield ChartFactory.getChartData(p1.date, p1.location));\n                    return new chart_1.Chart(name, p1, cdata);\n            }\n        });\n    }\n    /**\n     * Calculates the lat/lon of the geographic midpoint between two lat/lon pairs\n     * @param  {Point} p1 Latitude/longitude of first location\n     * @param  {Point} p2 Latitude/longitude of second location\n     * @return {Point} The latitude/longitude of the geographic midpoint\n     */\n    static getGeoMidpoint(p1, p2) {\n        let lat1 = ChartFactory.toRadians(p1.lat), lng1 = ChartFactory.toRadians(p1.lng), lat2 = ChartFactory.toRadians(p2.lat), lng2 = ChartFactory.toRadians(p2.lng), bx = Math.cos(lat2) * Math.cos(lng2 - lng1), by = Math.cos(lat2) * Math.sin(lng2 - lng1), lng3 = lng1 + Math.atan2(by, Math.cos(lat1) + bx), lat3 = Math.atan2(Math.sin(lat1) + Math.sin(lat2), Math.sqrt(Math.pow(Math.cos(lat1) + bx, 2) + Math.pow(by, 2)));\n        return {\n            lat: ChartFactory.toDegrees(lat3),\n            lng: ChartFactory.toDegrees(lng3)\n        };\n    }\n    /**\n     * Finds the exact midpoint between two dates\n     * @param  {string} date1 The first date\n     * @param  {string} date2 The second date\n     * @return {string}       The midpoint date as an ISO 8601 string\n     */\n    static getDatetimeMidpoint(date1, date2) {\n        let d1 = new Date(date1).getTime(), d2 = new Date(date2).getTime(), ts;\n        // if two dates are the same, midpoint is just that date\n        if (d1 === d2) {\n            return date1;\n        }\n        ts = d1 < d2 ? d1 + ((d2 - d1) / 2) : d2 + ((d1 - d2) / 2);\n        return new Date(ts).toISOString();\n    }\n    /**\n     * Gets chart data from the online ephemeris\n     * @param {string} date A UTC datetime string in ISO 8601 format\n     * @param {Point}  p    An object with numeric lat and lng properties\n     * @return {Promise<ChartData>}  A JSON object with the data needed to implement a chart\n     */\n    static getChartData(date, p) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield rp_1.default({\n                uri: \"http://www.morphemeris.com/ephemeris.php\",\n                qs: {\n                    date: date,\n                    lat: p.lat,\n                    lon: p.lng\n                }\n            }).then((cdata) => cdata);\n        });\n    }\n}\n/**\n * Converts decimal degrees to radians\n * @param  {number} degrees Decimal representation of degrees to be converted\n * @return {number}         Returns radians\n */\nChartFactory.toRadians = (degrees) => degrees * Math.PI / 180;\n/**\n * Converts radians to decimal degrees\n * @param  {number} radians Radians to be converted\n * @return {number}         Returns decimal degrees\n */\nChartFactory.toDegrees = (radians) => radians * 180 / Math.PI;\nexports.ChartFactory = ChartFactory;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n};\nconst planet_1 = require(\"./planet\");\nconst aspect_1 = require(\"./aspect\");\nconst chart_factory_1 = require(\"./chart-factory\");\n(function (ChartType) {\n    ChartType[ChartType[\"Basic\"] = 0] = \"Basic\";\n    ChartType[ChartType[\"Transits\"] = 1] = \"Transits\";\n    ChartType[ChartType[\"Synastry\"] = 2] = \"Synastry\";\n    ChartType[ChartType[\"Combined\"] = 3] = \"Combined\";\n    ChartType[ChartType[\"Davison\"] = 4] = \"Davison\";\n    ChartType[ChartType[\"CombinedTransits\"] = 5] = \"CombinedTransits\";\n    ChartType[ChartType[\"DavisonTransits\"] = 6] = \"DavisonTransits\";\n})(exports.ChartType || (exports.ChartType = {}));\nvar ChartType = exports.ChartType;\nclass Chart {\n    constructor(name, p1, cdata, p2, type = ChartType.Basic) {\n        this.name = name;\n        this.p1 = p1;\n        this.p2 = p2;\n        this.type = type;\n        this._debug = false;\n        this._signs = [\n            { name: \"aries\", symbol: \"q\", v: 1 },\n            { name: \"taurus\", symbol: \"w\", v: 1 },\n            { name: \"gemini\", symbol: \"e\", v: 1 },\n            { name: \"cancer\", symbol: \"r\", v: 1 },\n            { name: \"leo\", symbol: \"t\", v: 1 },\n            { name: \"virgo\", symbol: \"z\", v: 1 },\n            { name: \"libra\", symbol: \"u\", v: 1 },\n            { name: \"scorpio\", symbol: \"i\", v: 1 },\n            { name: \"sagittarius\", symbol: \"o\", v: 1 },\n            { name: \"capricorn\", symbol: \"p\", v: 1 },\n            { name: \"aquarius\", symbol: \"ü\", v: 1 },\n            { name: \"pisces\", symbol: \"+\", v: 1 }\n        ];\n        let pdata;\n        switch (type) {\n            case ChartType.Combined:\n                pdata = this.calculateCombinedPlanets(cdata);\n                this._planets1 = this.getPlanets(pdata);\n                this._ascendant = pdata.ascendant;\n                this._houses = pdata.houses;\n                break;\n            case ChartType.CombinedTransits:\n                pdata = this.calculateCombinedPlanets(cdata);\n                this._planets1 = this.getPlanets(pdata);\n                this._planets2 = this.getPlanets(cdata[2]);\n                this._ascendant = pdata.ascendant;\n                this._houses = pdata.houses;\n                break;\n            default:\n                this._planets1 = this.getPlanets(cdata[0]);\n                if (cdata[1]) {\n                    this._planets2 = this.getPlanets(cdata[1]);\n                }\n                this._ascendant = cdata[0].ascendant;\n                this._houses = cdata[0].houses;\n                break;\n        }\n        this.calculateAspects();\n    }\n    /**\n     * Extracts planet data from ChartData and creates Planet objects for each one\n     * @param  {ChartData}     cdata JSON data returned from morphemeris REST API\n     * @return {Array<Planet>}       An array of Planet objects\n     */\n    getPlanets(cdata) {\n        let planets = [];\n        for (let p in cdata.planets) {\n            let pd = cdata.planets[p];\n            planets.push(new planet_1.Planet(pd.name, pd.lon, pd.lat, pd.spd));\n        }\n        return planets;\n    }\n    /**\n     * Calculates the aspects between planets in the chart\n     */\n    calculateAspects() {\n        this._aspects = [];\n        if (!this._planets2) {\n            // calculate aspects within the _planets1 array\n            for (let i in this._planets1) {\n                for (let j in this._planets1) {\n                    if (i !== j && j > i) {\n                        try {\n                            this._aspects.push(new aspect_1.Aspect(this._planets1[i], this._planets1[j]));\n                        }\n                        catch (err) {\n                            if (this._debug)\n                                console.error(err);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            // calculate aspects between the _planets1 and _planets2 arrays\n            for (let i in this._planets1) {\n                for (let j in this._planets2) {\n                    try {\n                        this._aspects.push(new aspect_1.Aspect(this._planets1[i], this._planets2[j]));\n                    }\n                    catch (err) {\n                        if (this._debug)\n                            console.error(err);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Calculates longitudes for a combined chart\n     * @param {ChartData} p1 Planet data from person one\n     * @param {ChartData} p2 Planet data from person two\n     */\n    calculateCombinedPlanets(cdata) {\n        let cd = { \"planets\": { \"sun\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"moon\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"mercury\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"venus\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"mars\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"jupiter\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"saturn\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"uranus\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"neptune\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"pluto\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"north node\": { \"name\": \"north node\", \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"south node\": { \"name\": \"south node\", \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"chiron\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"pholus\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"ceres\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"pallas\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"juno\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"vesta\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"cupido\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"chariklo\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"chaos\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"eris\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null }, \"nessus\": { \"name\": null, \"lon\": null, \"lat\": null, \"spd\": null, \"r\": null } }, \"houses\": [null, null, null, null, null, null, null, null, null, null, null, null], \"ascendant\": null, \"mc\": null };\n        for (let p in cdata[0].planets) {\n            cd.planets[p].name = p;\n            cd.planets[p].lon = this.getLonMidpoint(cdata[0].planets[p].lon, cdata[1].planets[p].lon);\n            cd.planets[p].lat = (cdata[0].planets[p].lat + cdata[1].planets[p].lat) / 2;\n            cd.planets[p].spd = (cdata[0].planets[p].spd + cdata[1].planets[p].spd) / 2;\n        }\n        for (let h in cdata[0].houses) {\n            cd.houses[h] = this.getLonMidpoint(cdata[0].houses[h], cdata[1].houses[h]);\n        }\n        cd.ascendant = this.getLonMidpoint(cdata[0].ascendant, cdata[1].ascendant);\n        cd.mc = this.getLonMidpoint(cdata[0].mc, cdata[1].mc);\n        return cd;\n    }\n    /**\n     * Finds the midpoint between two planets on the \"short\" side\n     * @param  {number} l1 Longitude of planet one\n     * @param  {number} l2 Longitude of planet two\n     * @return {number}    Longitude of the midpoint\n     */\n    getLonMidpoint(l1, l2) {\n        let mp, high, low;\n        // if they are exactly the same, return either one\n        if (l1 === l2) {\n            return l1;\n        }\n        // figure out which has a higher/lower longitude\n        high = l1 > l2 ? l1 : l2;\n        low = l1 < l2 ? l1 : l2;\n        if (high - low <= 180) {\n            mp = (high + low) / 2;\n        }\n        else {\n            mp = ((((low + 360) - high) / 2) + high) % 360;\n        }\n        return mp;\n    }\n    /**\n     * Refresh or set the transits to a new time\n     * @param {string} date (Optional) Target datetime for transits in ISO 8601 format; defaults to now()\n     */\n    refreshTransits(date = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (ChartType.Synastry === this.type) {\n                throw new Error(\"You cannot refresh transits on a synastry chart\");\n            }\n            if (null === date) {\n                date = new Date().toISOString();\n            }\n            let cdata = yield chart_factory_1.ChartFactory.getChartData(date, this.p1.location);\n            this._planets2 = this.getPlanets(cdata);\n            this.calculateAspects();\n        });\n    }\n    get houses() { return this._houses; }\n    get aspects() { return this._aspects; }\n    get ascendant() { return this._ascendant; }\n    get innerPlanets() { return this._planets2 ? this._planets1 : []; }\n    get outerPlanets() { return this._planets2 ? this._planets2 : this._planets1; }\n}\nexports.Chart = Chart;\n","\"use strict\";\nvar planet_1 = require(\"./planet\");\nexports.Planet = planet_1.Planet;\nvar person_1 = require(\"./person\");\nexports.Person = person_1.Person;\nvar aspect_1 = require(\"./aspect\");\nexports.Aspect = aspect_1.Aspect;\nvar chart_1 = require(\"./chart\");\nexports.Chart = chart_1.Chart;\nexports.ChartType = chart_1.ChartType;\nvar chart_factory_1 = require(\"./chart-factory\");\nexports.ChartFactory = chart_factory_1.ChartFactory;\n"],"names":["Planet","name","lon","lat","spd","symbols","longitude","latitude","speed","symbol","toLowerCase","indexOf","https","require$$1","uri","options","url","qs","Object","keys","map","encodeURIComponent","key","toString","join","rp","Promise","resolve","reject","http","require$$0","lib","startsWith","req","get","response","statusCode","Error","body","on","chunk","push","JSON","parse","err","defineProperty","exports","value","__awaiter","this","thisArg","_arguments","P","generator","fulfilled","next","e","rejected","throw","step","result","done","then","apply","rp_1","Person","date","location","loc","test","TypeError","Date","toISOString","getLatLon","RangeError","lng","dt","p","default","_key","Math","floor","now","tzinfo","timeZoneId","error","errorMessage","address","latlng","results","geometry","error_message","Aspect","p1","p2","_types","major","angle","orb","l1","l2","ng","abs","r1","isRetrograde","r2","s1","s2","ct","type","t","_type","_orb","Number","toFixed","_applying","chart_1","ChartFactory","ChartType","Basic","length","Synastry","Combined","CombinedTransits","Davison","Transits","DavisonTransits","all","getChartData","Chart","cdata","getDatetimeMidpoint","getGeoMidpoint","lat1","toRadians","lng1","lat2","lng2","bx","cos","by","sin","lng3","atan2","lat3","sqrt","pow","toDegrees","date1","date2","d1","getTime","d2","ts","degrees","PI","radians","planet_1","require$$2","aspect_1","chart_factory_1","_debug","_signs","v","pdata","calculateCombinedPlanets","_planets1","getPlanets","_ascendant","ascendant","_houses","houses","_planets2","calculateAspects","planets","pd","_aspects","i","j","console","cd","getLonMidpoint","h","mc","mp","high","low","require$$4","person_1","require$$3"],"mappings":"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"}